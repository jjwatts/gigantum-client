version: 2.1

executors:
  gig_client:
    docker:
      - image: gigantum/circleci-client:bdea5a9780-2019-05-10

jobs:
  mypy-gtmcore:
    executor: gig_client
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Run mypy type checker for gtmcore
          command: |
            python3 -m mypy packages/gtmcore --ignore-missing-imports --strict-optional

  mypy-gtmapi:
    executor: gig_client
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Run mypy type checker for gtmapi
          command: |
            python3 -m mypy packages/gtmapi --ignore-missing-imports --strict-optional

  test-confhttpproxy:
    executor: gig_client
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Test proxy lib
          command: |
            cd ~/repo/packages/confhttpproxy
            echo "import docker; c = docker.from_env()" > runtests.py
            echo "c.images.build(path='.', tag='httpconf')" >> runtests.py
            echo "print(c.containers.run('httpconf', 'pytest /app').decode())" >> runtests.py
            python3 runtests.py
            cd ~/repo

  test-gtmcore:
    executor: gig_client
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Set authentication credentials
          command: bash /home/circleci/repo/.circleci/write_auth.sh
      - run:
          name: Run Core unit and coverage tests
          command: |
            export SKIP_CONDA_TESTS=1
            redis-server > /dev/null 2> /dev/null &
            rqscheduler --interval=2 2> /dev/null &
            pytest --cov=gtmcore packages/gtmcore
            codecov -F core

  test-gtmapi:
    executor: gig_client
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Set authentication credentials
          command: bash /home/circleci/repo/.circleci/write_auth.sh
      - run:
          name: Run API unit, integration and coverage tests
          command: |
            export PYTHONPATH=$PYTHONPATH:/home/circleci/repo/packages/gtmcore
            export SKIP_CONDA_TESTS=1
            cd /home/circleci/repo
            redis-server > /dev/null 2> /dev/null &
            rqscheduler --interval=2 2> /dev/null &
            python3 /home/circleci/repo/packages/gtmcore/gtmcore/dispatcher/worker.py 7 &
            pytest --cov=lmsrvlabbook --cov=lmsrvcore packages/gtmapi/lmsrvlabbook
            pytest --cov=lmsrvlabbook --cov=lmsrvcore --cov-append packages/gtmapi/lmsrvcore
            pytest --cov=lmsrvlabbook --cov=lmsrvcore --cov-append packages/gtmapi/lmsrvlabbook/tests/int_labbook_mutations.py
            codecov -F api

  test-long-running-env:
    executor: gig_client
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Set authentication credentials
          command: bash /home/circleci/repo/.circleci/write_auth.sh
      - run:
          name: Run long running conda environment tests
          command: |
            export PYTHONPATH=$PYTHONPATH:/home/circleci/repo/packages/gtmcore
            cd /home/circleci/repo
            redis-server > /dev/null 2> /dev/null &
            rqscheduler --interval=2 2> /dev/null &
            python3 /home/circleci/repo/packages/gtmcore/gtmcore/dispatcher/worker.py 7 &
            pytest --cov=gtmcore packages/gtmcore/gtmcore/environment/tests/test_conda.py
            codecov -F core

  test-ui-components:
    executor: gig_client
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build frontend production code
          command: |
            cd /home/circleci/repo/ui
            npm install
            npm install relay
            npm run relay
            unset CI && npm run build
      - run:
          name: Run jest tests
          command: |
            cd /home/circleci/repo/ui
            jest shared/fileBrowser activity dashboard -u

  fossa:
    executor: gig_client
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Build frontend production code
          command: |
            cd /home/circleci/repo/ui
            npm install
            npm install relay
      - run:
          name: Run Fossa
          command: fossa
          working_directory: /home/circleci/repo/
      - run:
          name: Enforce Fossa checks
          command: fossa test --timeout 600
          working_directory: /home/circleci/repo/

workflows:
  version: 2
  run_tests:
    jobs:
      - mypy-gtmcore
      - mypy-gtmapi
      - test-long-running-env
      - test-confhttpproxy:
          requires:
            - mypy-gtmcore
            - mypy-gtmapi
      - test-gtmcore:
          requires:
            - mypy-gtmcore
            - mypy-gtmapi
      - test-gtmapi:
          requires:
            - mypy-gtmcore
            - mypy-gtmapi
      - test-ui-components:
          requires:
            - mypy-gtmcore
            - mypy-gtmapi
      - fossa:
          requires:
            - test-confhttpproxy
