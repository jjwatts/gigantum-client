version: 2.1

executors:
  gig_client:
    docker:
      - image: gigantum/circleci-client:616cd769fd-2019-06-28
  test_harness_exec:
    machine: true

jobs:
  mypy-gtmcore:
    executor: gig_client
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Run mypy type checker for gtmcore
          command: |
            python3 -m mypy packages/gtmcore --ignore-missing-imports --strict-optional

  mypy-gtmapi:
    executor: gig_client
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Run mypy type checker for gtmapi
          command: |
            python3 -m mypy packages/gtmapi --ignore-missing-imports --strict-optional

  test-confhttpproxy:
    executor: gig_client
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Test proxy lib
          command: |
            cd ~/repo/packages/confhttpproxy
            echo "import docker; c = docker.from_env()" > runtests.py
            echo "c.images.build(path='.', tag='httpconf')" >> runtests.py
            echo "print(c.containers.run('httpconf', 'pytest /app').decode())" >> runtests.py
            python3 runtests.py
            cd ~/repo

  test-gtmcore:
    executor: gig_client
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Set authentication credentials
          command: bash /home/circleci/repo/.circleci/write_auth.sh
      - run:
          name: Run Core unit and coverage tests
          command: |
            export PYTHONPATH=$PYTHONPATH:/home/circleci/repo/packages/gtmcore
            export SKIP_ENV_TESTS=1
            export SKIP_BG_TESTS=1
            redis-server > /dev/null 2> /dev/null &
            rqscheduler --interval=2 2> /dev/null &
            python3 /home/circleci/repo/packages/gtmcore/gtmcore/dispatcher/worker.py &
            pytest --cov=gtmcore packages/gtmcore/gtmcore/
            codecov -F core

  test-gtmapi:
    executor: gig_client
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Set authentication credentials
          command: bash /home/circleci/repo/.circleci/write_auth.sh
      - run:
          name: Run API unit, integration and coverage tests
          command: |
            export PYTHONPATH=$PYTHONPATH:/home/circleci/repo/packages/gtmcore
            export SKIP_ENV_TESTS=1
            export SKIP_BG_TESTS=1
            cd /home/circleci/repo
            redis-server > /dev/null 2> /dev/null &
            rqscheduler --interval=2 2> /dev/null &
            python3 /home/circleci/repo/packages/gtmcore/gtmcore/dispatcher/worker.py &
            pytest --cov=lmsrvlabbook --cov=lmsrvcore packages/gtmapi/lmsrvlabbook
            pytest --cov=lmsrvlabbook --cov=lmsrvcore --cov-append packages/gtmapi/lmsrvcore
            pytest --cov=lmsrvlabbook --cov=lmsrvcore --cov-append packages/gtmapi/lmsrvlabbook/tests/int_labbook_mutations.py
            codecov -F api

  test-gtmcore-environment:
    executor: gig_client
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Set authentication credentials
          command: bash /home/circleci/repo/.circleci/write_auth.sh
      - run:
          name: Run gtmcore environment tests
          command: |
            export PYTHONPATH=$PYTHONPATH:/home/circleci/repo/packages/gtmcore
            cd /home/circleci/repo
            redis-server > /dev/null 2> /dev/null &
            rqscheduler --interval=2 2> /dev/null &
            python3 /home/circleci/repo/packages/gtmcore/gtmcore/dispatcher/worker.py &
            pytest --cov=gtmcore packages/gtmcore/gtmcore/environment/tests
            codecov -F core

  test-background-jobs:
    executor: gig_client
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Set authentication credentials
          command: bash /home/circleci/repo/.circleci/write_auth.sh
      - run:
          name: Run Dispatcher and background job tests
          command: |
            export PYTHONPATH=$PYTHONPATH:/home/circleci/repo/packages/gtmcore
            cd /home/circleci/repo
            redis-server > /dev/null 2> /dev/null &
            rqscheduler --interval=2 2> /dev/null &
            python3 /home/circleci/repo/packages/gtmcore/gtmcore/dispatcher/worker.py &
            pytest --cov=gtmcore packages/gtmcore/gtmcore/dispatcher/tests
            codecov -F core

  test-ui-components:
    executor: gig_client
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build frontend production code
          command: |
            cd /home/circleci/repo/ui
            npm install
            npm install relay
            npm run relay
            unset CI && npm run build
      - run:
          name: Run jest tests
          command: |
            cd /home/circleci/repo/ui
            jest shared/fileBrowser activity dashboard -u

  test-harness:
    executor: test_harness_exec
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Build and start Gigantum client
          command: |
            bash testing/circleci/ubuntu1404-install.sh
            python3.6 -m venv gtm-env
            source gtm-env/bin/activate
            cd gtm && pip install -e . && cd ..
            gtm client build
            gtm client start
      - run:
          name: Set up credentials.txt for test user (circleci)
          command: |
            echo $TEST_USERNAME > credentials.txt
            echo $TEST_PASSWORD >> credentials.txt
            echo $TEST_USERNAME_2 >> credentials.txt
            echo $TEST_PASSWORD_2 >> credentials.txt
      - run:
          name: Run the setup and preparation script
          command: |
            cp credentials.txt testing/credentials.txt
            cd testing
            python3.6 -m venv test-env
            source test-env/bin/activate
            pip install -r requirements.txt
      - run:
          name: Run Tests
          command: |
            cd testing
            source test-env/bin/activate
            python3 driver.py test_graphql test_delete_project test_branching

  fossa:
    executor: gig_client
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Build frontend production code
          command: |
            cd /home/circleci/repo/ui
            npm install
            npm install relay
      - run:
          name: Run Fossa
          command: fossa
          working_directory: /home/circleci/repo/
      - run:
          name: Enforce Fossa checks
          command: fossa test --timeout 600
          working_directory: /home/circleci/repo/

workflows:
  version: 2
  run_tests:
    jobs:
      - mypy-gtmcore
      - mypy-gtmapi
      - test-gtmcore-environment
      - test-confhttpproxy:
          requires:
            - mypy-gtmcore
            - mypy-gtmapi
      - test-gtmcore:
          requires:
            - mypy-gtmcore
            - mypy-gtmapi
      - test-gtmapi:
          requires:
            - mypy-gtmcore
            - mypy-gtmapi
      - test-ui-components:
          requires:
            - mypy-gtmcore
            - mypy-gtmapi
      #- test-harness:
      #    requires:
      #      - mypy-gtmcore
      #      - mypy-gtmapi
      - test-background-jobs:
          requires:
            - mypy-gtmcore
            - mypy-gtmapi
      - fossa:
          requires:
            - test-confhttpproxy

