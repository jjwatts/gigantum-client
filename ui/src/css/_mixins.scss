@mixin boxShadow(){
    box-shadow: 0 0px 12px 0 rgba(0,0,0,.10);
}

@mixin boxShadowDark(){
    box-shadow: 0 0px 12px 0 rgba(0,0,0,.50);
}

@mixin menuAnimation() {
  animation: slide-down-fade-in forwards .25s;
}


@mixin modal($height, $width) {
  position: fixed;
  left: 50%;
  top: 50%;
  z-index: index($elements, modal);
  width: $width;
  height: $height;

  margin: (-($height/2)) 0 0 (-($width/2));

  border: 1px solid $white;
  border-radius: 8px;
  background-color: $white;
  animation: slide-up-fade-in forwards .25s;

  @include boxShadow();
}


@mixin modalHeader(){
  padding: 5px 0 5px 0px;
  color: $azure;
  text-align: center;
  min-width: 100%;
  margin: 0 auto;
}


@mixin flex($content, $direction) {
  display: flex;
  justify-content: $content;
  flex-direction: $direction;
}

@mixin close() {
  position: absolute;
  height: 28px;
  width: 28px;
  top: 7px;
  right: 7px;
  background: url('~Images/icons/close.svg') no-repeat center center !important;
  background-size: 28px;
  cursor: pointer;

  &:hover {
    background: url('~Images/icons/close.svg') no-repeat center center;
    background-size: 34px !important;
    padding: 1rem !important;
  }
}

@mixin card($height, $width) {
  width: $width;
  height: $height;

  border: 1px solid $white;
  background-color: $white;

  @include boxShadow();

}

@mixin triangle($direction, $size, $color) {
    width: 0;
    height: 0;
    @if $direction == 'up' {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-bottom: $size solid $color;
    }
    @else if $direction == 'down' {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-top: $size solid $color;
    }
    @else if $direction == 'right' {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-left: $size solid $color;
    }
    @else if $direction == 'left' {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-right: $size solid $color;
    }
}


/************************************
  12 column grid
  grid max width 1235px
  column 80px
  gutters 25px
*************************************/

@mixin grid() {
  display: flex;
  justify-content: flex-start;
  flex-direction: row;
  flex-wrap: wrap;
  max-width: 1270px;
  min-width: 720px;

}
/************************************
  column is the number of columns items to be displayed
  span is how many standard columns the column should span across
*************************************/
@mixin columnShrink($columns, $maxShrink) {
  $span: 12/$columns;
  $width: ($span * 80px) + (($span - 1) * 25px);
  width: $width;
  margin: 12.5px 12.5px;
  padding: 10px;

  @if $maxShrink >=1 {
    @media screen and (max-width: 1440px) and (min-width: 0) {
      $span: 12/ ($columns + 1);
      $width: ($span * 80px) + (($span - 1) * 25px);
      width: $width;
    }
  }
  @if $maxShrink >=2 {
    @media screen and (max-width: 1124px) and (min-width: 0) {
      $span: 12/ ($columns + 2);
      $width: ($span * 80px) + (($span - 1) * 25px);
      width: $width;
    }
  }
}

@mixin column($columns) {
  $span: 12/$columns;
  $width: ($span * 80px) + (($span - 1) * 25px);
  width: $width;
  margin: 12.5px 12.5px;
  padding: 10px;
}

@mixin removeColumns($width, $span, $columnsToRemove, $offset){
  $columnWidth: 105px;

  $maxScreenWidth: $width - (($columnsToRemove - $offset) * $columnWidth) + 205px;

  $minScreenWidth: $maxScreenWidth - $columnWidth;

  $minScreenWidth: 0px;
  // TODO set minscreenwidth


  @media screen and (max-width: $maxScreenWidth) and (min-width: $minScreenWidth) {
    width: (($span - $columnsToRemove) * 80px) + (($span - ($columnsToRemove + 1)) * 25px) !important;
    max-width: $width;
  }
}

@mixin spanColumns($span, $offset) {
  $width: ($span * 80px) + (($span - 1) * 25px);

  width: ($span * 80px) + (($span - 1) * 25px);
  margin: 12.5px;

  /************************************
    remove 1 column
  *************************************/
  @include removeColumns($width, $span, 1, $offset);
  /************************************
    remove 2 columns
  *************************************/
  @include removeColumns($width, $span, 2, $offset);

  /************************************
    remove 3 columns
  *************************************/
  @include removeColumns($width, $span, 3, $offset);

  /************************************
    remove 4 columns
  *************************************/
  @include removeColumns($width, $span, 4, $offset);

  /************************************
    remove 5 columns
  *************************************/
  @include removeColumns($width, $span, 5, $offset);

}


@mixin spanColumnsSidePanel($span) {
  $width: ($span * 80px) + (($span - 1) * 25px);

  width: ($span * 80px) + (($span - 1) * 25px);
  margin: 12.5px;

  /************************************
    remove 1 column
  *************************************/
  @include removeColumnsSidePanel($width, $span, 3);

}
